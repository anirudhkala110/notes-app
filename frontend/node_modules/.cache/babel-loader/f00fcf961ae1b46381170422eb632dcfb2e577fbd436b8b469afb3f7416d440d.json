{"ast":null,"code":"import _toConsumableArray from\"E:/HTML CSS JS/Git Files/Notes_App/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"E:/HTML CSS JS/Git Files/Notes_App/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"E:/HTML CSS JS/Git Files/Notes_App/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import CreateNote from'./CreateNote';import{v4 as uuid}from'uuid';import Note from'./Note';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Notes=function Notes(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),notes=_useState4[0],setNotes=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),editToggle=_useState6[0],setEditToggle=_useState6[1];var editHandler=function editHandler(id,text){setEditToggle(id);setInputText(text);console.log(id,text);};var deleteHandler=function deleteHandler(id){var newNote=notes.filter(function(n){return n.id!==id;});setNotes(newNote);};var saveHandler=function saveHandler(){if(editToggle){setNotes(notes.map(function(note){return note.id===editToggle?_objectSpread(_objectSpread({},note),{},{text:inputText}):note;}));}else setNotes(function(prevNotes){return[].concat(_toConsumableArray(prevNotes),[{id:uuid(),text:inputText}]);});setInputText('');setEditToggle(null);};useEffect(function(){var data=JSON.parse(localStorage.getItem('Notes'));console.log(\"data -> \",data);if(data){setNotes(data);}else{alert(\"Nothing\");}},[]);useEffect(function(){console.log(notes);window.localStorage.setItem(\"Notes\",JSON.stringify(notes));},[notes]);// Here if we don't write the name of the updating component then this useEffect render only when the page gets refresh hence we use the notes so that when ever the data saves in the notes it will automatically call useEffect rather then render it only at start or on refresh, this also helps to optimise the CPU\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"notes\",children:[notes.map(function(note){return editToggle===note.id?/*#__PURE__*/_jsx(CreateNote,{inputText:inputText,setInputText:setInputText,saveHandler:saveHandler}):/*#__PURE__*/_jsx(Note,{id:note.id,text:note.text,editHandler:editHandler,deleteHandler:deleteHandler},note.id);}),editToggle?/*#__PURE__*/_jsx(_Fragment,{}):/*#__PURE__*/_jsx(CreateNote,{inputText:inputText,setInputText:setInputText,saveHandler:saveHandler})]});};export default Notes;","map":{"version":3,"names":["React","useEffect","useState","CreateNote","v4","uuid","Note","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Notes","_useState","_useState2","_slicedToArray","inputText","setInputText","_useState3","_useState4","notes","setNotes","_useState5","_useState6","editToggle","setEditToggle","editHandler","id","text","console","log","deleteHandler","newNote","filter","n","saveHandler","map","note","_objectSpread","prevNotes","concat","_toConsumableArray","data","JSON","parse","localStorage","getItem","alert","window","setItem","stringify","className","children"],"sources":["E:/HTML CSS JS/Git Files/Notes_App/frontend/notes-app/frontend/src/Components/Notes.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport CreateNote from './CreateNote'\r\nimport { v4 as uuid } from 'uuid'\r\nimport Note from './Note'\r\nconst Notes = () => {\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [notes, setNotes] = useState([])\r\n    const [editToggle, setEditToggle] = useState(null)\r\n\r\n    const editHandler = (id, text) => {\r\n        setEditToggle(id)\r\n        setInputText(text)\r\n        console.log(id, text)\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n        const newNote = notes.filter(n => n.id !== id)\r\n        setNotes(newNote)\r\n    }\r\n\r\n    const saveHandler = () => {\r\n        if (editToggle) {\r\n            setNotes(notes.map((note) => (\r\n                note.id === editToggle ?\r\n                    {\r\n                        ...note, text: inputText\r\n                    }\r\n                    :\r\n                    note\r\n            )))\r\n        }\r\n        else\r\n            setNotes((prevNotes) => [\r\n                ...prevNotes, {\r\n                    id: uuid(),\r\n                    text: inputText\r\n                }\r\n            ])\r\n        setInputText('')\r\n        setEditToggle(null)\r\n    }\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('Notes'))\r\n        console.log(\"data -> \", data)\r\n        if (data) {\r\n            setNotes(data)\r\n        }\r\n        else {\r\n            alert(\"Nothing\")\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        console.log(notes)\r\n        window.localStorage.setItem(\"Notes\", JSON.stringify(notes))\r\n    }, [notes])\r\n    // Here if we don't write the name of the updating component then this useEffect render only when the page gets refresh hence we use the notes so that when ever the data saves in the notes it will automatically call useEffect rather then render it only at start or on refresh, this also helps to optimise the CPU\r\n    return (\r\n        <div className='notes'>\r\n            {\r\n                notes.map((note) => (\r\n                    editToggle === note.id ?\r\n                        <CreateNote\r\n                            inputText={inputText}\r\n                            setInputText={setInputText}\r\n                            saveHandler={saveHandler} />\r\n                        :\r\n                        <Note\r\n                            key={note.id}\r\n                            id={note.id}\r\n                            text={note.text}\r\n                            editHandler={editHandler}\r\n                            deleteHandler={deleteHandler}\r\n                        >\r\n                        </Note>\r\n\r\n                ))\r\n            }\r\n            {\r\n                editToggle ? <></> : <CreateNote\r\n                    inputText={inputText}\r\n                    setInputText={setInputText}\r\n                    saveHandler={saveHandler} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}